allprojects {
    apply plugin: "java-library"
    apply plugin: "java"

    group "ru.craftysoft.util"
    version "1.0.0"

    compileJava.options.encoding = "UTF-8"
    sourceCompatibility = "15"
    targetCompatibility = "15"

    dependencies {
        api platform("io.projectreactor:reactor-bom:$reactorBomVersion")
        api platform("com.fasterxml.jackson:jackson-bom:$jacksonVersion")
        constraints {
            api(
                    "org.projectlombok:lombok:$lombokVersion",

                    "com.google.dagger:dagger:$daggerVersion",
                    "com.google.code.findbugs:jsr305:3.0.2",
                    "javax.annotation:javax.annotation-api:1.3.2",

                    "org.slf4j:slf4j-api:1.7.30",
                    "org.slf4j:jul-to-slf4j:1.7.30",
                    "ch.qos.logback:logback-classic:1.2.3",

                    "org.jooq:jooq:3.14.6",
                    "io.vertx:vertx-pg-client:4.0.2",

                    "org.snakeyaml:snakeyaml-engine:2.2.1",

                    "org.glassfish:jakarta.el:4.0.0",
                    "org.hibernate.validator:hibernate-validator:$hibernateValidatorVersion",

                    "commons-io:commons-io:2.6",
                    "commons-cli:commons-cli:1.4",
                    "org.apache.commons:commons-lang3:3.11",

                    "com.squareup:javapoet:1.13.0",
            )
        }
        compileOnly("org.projectlombok:lombok")
        [
                "com.google.dagger:dagger-compiler:$daggerVersion",
                "org.projectlombok:lombok:$lombokVersion",
        ].forEach {
            annotationProcessor(it)
            testAnnotationProcessor(it)
        }

        if (project.name != "common-module") {
            api project(":util-lib:common-module")
        }

        tasks.withType(JavaCompile) {
            options.compilerArgs += "--enable-preview"
            options.compilerArgs += "-Xlint:preview"
        }

        repositories {
            mavenCentral()
            jcenter()
            gradlePluginPortal()
        }
    }
}
